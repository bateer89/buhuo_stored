BEGIN
DECLARE 2WeeksBefore date;
DECLARE today date;

SELECT  version()
       ,@@sql_mode;

SET sql_mode=(
SELECT  REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY','')); ##CALL classify_new();
SET today=thisDay;
SET 2WeeksBefore=DATE_SUB(today,INTERVAL 14 DAY);

#CALL proc_tmpdayly(DATE_SUB(thisDay,INTERVAL 2 DAY),thisDay);


DROP TABLE IF EXISTS tmp_everyday_tmp_1;
CREATE TABLE tmp_everyday_tmp_1 (
shopid  varchar(8) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ,
shopname  varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ,
goodsid  varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ,
goodsname  varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ,
salevalue  decimal(38,2) NULL DEFAULT NULL ,
discvalue  decimal(38,2) NULL DEFAULT NULL ,
disc  decimal(44,6) NULL DEFAULT NULL ,
zlprice  decimal(16,2) NULL DEFAULT NULL ,
normalprice  decimal(16,2) NULL DEFAULT NULL ,
qty  decimal(38,3) NULL DEFAULT NULL ,
sdate  date NULL DEFAULT NULL ,
zkb  decimal(16,2) NULL DEFAULT NULL ,
dayNumber  int DEFAULT 0 ,
discDayNumber  int DEFAULT 0 ,
INDEX index_1 (shopid, goodsid, zkb) USING BTREE 
)
ENGINE=InnoDB
DEFAULT CHARACTER SET=utf8 COLLATE=utf8_general_ci
ROW_FORMAT=DYNAMIC;

INSERT INTO tmp_everyday_tmp_1(shopid,
shopname,
goodsid,
goodsname,
salevalue,
discvalue,
disc,
zlprice,
normalprice,
qty,
sdate,
zkb,
dayNumber,
discDayNumber)
SELECT 
x.shopid AS shopid,
x.shopname AS shopname,
x.goodsid AS goodsid,
x.goodsname AS goodsname,
SUM(x.salevalue) AS salevalue,
SUM(x.discvalue) AS discvalue,
SUM(x.salevalue)/SUM(x.salevalue+x.discvalue) AS disc,
x.zlprice AS zlprice,
x.normalprice AS normalprice,
SUM(x.qty) AS qty,
x.sdate AS sdate,
getZKB(x.zlprice,x.normalprice) AS zkb,
COUNT(x.zlprice) AS dayNumber,
COUNT(IF((x.zlprice<(getZKB(x.zlprice,x.normalprice)*x.normalprice)),1,0)) AS discDayNumber
FROM zn_dayly_sales x 
WHERE x.shopid=shopId AND x.goodsid NOT in (SELECT y.goodsid FROM zn_prom_detail_tmp y WHERE y.shopid=shopId)
 AND x.sdate<=today AND x.sdate>2WeeksBefore
GROUP BY x.shopid,x.goodsid,x.zlprice;





DROP TABLE IF EXISTS tmp_everyday_tmp_2;
CREATE TABLE tmp_everyday_tmp_2 (
shopid  varchar(8) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ,
shopname  varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ,
goodsid  varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ,
goodsname  varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ,
xlid  varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '商品类别（小类）' ,
salevalue  decimal(60,2) NULL DEFAULT NULL ,
discvalue  decimal(60,2) NULL DEFAULT NULL ,
disc  decimal(65,6) NULL DEFAULT NULL ,
normalprice  decimal(16,2) NULL DEFAULT NULL ,
qty  decimal(60,3) NULL DEFAULT NULL ,
zkb  decimal(16,2) NULL DEFAULT NULL ,
allDayNumber  int,
discDayNumber  int,
INDEX index_1 (shopid, goodsid) USING BTREE 
)
ENGINE=InnoDB
DEFAULT CHARACTER SET=utf8 COLLATE=utf8_general_ci
ROW_FORMAT=DYNAMIC;


INSERT INTO tmp_everyday_tmp_2(shopid, shopname, goodsid, goodsname, 
salevalue, discvalue, disc, normalprice, qty, zkb, allDayNumber, discDayNumber)
SELECT  y.shopid                                      AS shopid
       ,y.shopname                                    AS shopname
       ,y.goodsid                                     AS goodsid
       ,y.goodsname                                   AS goodsname
       ,SUM(y.salevalue)                              AS salevalue
       ,SUM(y.discvalue)                              AS discvalue
       ,SUM(y.salevalue)/SUM(y.salevalue+y.discvalue) AS disc
       ,y.normalprice                                 AS normalprice
       ,SUM(y.qty)                                    AS qty
       ,y.zkb                                         AS zkb
       ,SUM(y.dayNumber)                          		AS allDayNumber
       ,SUM(y.discDayNumber)                          AS discDayNumber
FROM tmp_everyday_tmp_1 y
GROUP BY  y.shopid
         ,y.goodsid
         ,y.zkb;
# 销售数量求和
DROP TABLE IF EXISTS tmp_everyday_tmp_2_1;
CREATE TABLE tmp_everyday_tmp_2_1 (
shopid  varchar(8) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ,
goodsid  varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ,
dayNumberSum  bigint(21) DEFAULT NULL ,
INDEX index_1 (shopid, goodsid) USING BTREE 
)
ENGINE=InnoDB
DEFAULT CHARACTER SET=utf8 COLLATE=utf8_general_ci
ROW_FORMAT=DYNAMIC;


INSERT INTO tmp_everyday_tmp_2_1 (shopid,goodsid,dayNumberSum)
SELECT  z.shopid
       ,z.goodsid
       ,SUM(z.allDayNumber) AS dayNumberSum
FROM tmp_everyday_tmp_2 z
WHERE z.zkb<0.95 
GROUP BY  z.shopid
         ,z.goodsid;



UPDATE tmp_everyday_tmp_2 a
SET a.allDayNumber=14;


UPDATE tmp_everyday_tmp_2 a join tmp_everyday_tmp_2_1 b on a.shopid=b.shopid AND a.goodsid=b.goodsid
SET a.allDayNumber=(14-b.dayNumberSum)
WHERE a.zkb=0.95;


#update xlid
update tmp_everyday_tmp_2,v_goods 
SET tmp_everyday_tmp_2.xlid=v_goods.deptid
WHERE tmp_everyday_tmp_2.goodsid=v_goods.goodsid;


INSERT INTO zn_price_dms (shopid,goodsid,normalprice,disc1,disc2,band1,band2,trueprice,dms,sdate)
SELECT 
a.shopid AS shopid,
a.goodsid AS goodsid,
a.normalprice AS normalprice,
a.zkb*100 AS disc1,
CASE WHEN (a.zkb<0.95) THEN (a.zkb+0.05)*100
            ELSE 5000 END AS disc2,
a.zkb*20 AS band1,
CASE WHEN (a.zkb*20<19) THEN a.zkb*20+1
												ELSE 1000 END AS band2,
(a.salevalue/a.qty) AS trueprice,
a.qty/a.allDayNumber AS dms,  #销售数量
now() as sdate
FROM tmp_everyday_tmp_2 a
ON DUPLICATE KEY UPDATE
zn_price_dms.shopid=VALUES(shopid),
zn_price_dms.goodsid=VALUES(goodsid),
zn_price_dms.normalprice=VALUES(normalprice),
zn_price_dms.disc1=VALUES(disc1),
zn_price_dms.disc2=VALUES(disc2),
zn_price_dms.band1=VALUES(band1),
zn_price_dms.band2=VALUES(band2),
zn_price_dms.trueprice=VALUES(trueprice),
zn_price_dms.dms=VALUES(dms),
zn_price_dms.sdate=now();


update (SELECT * FROM zn_xl_dms WHERE zn_xl_dms.disc1=95) a RIGHT JOIN zn_xl_dms b 
on a.xlid=b.xlid AND a.shopid=b.shopid
SET b.dms_ori=a.dms_disc
WHERE b.disc1<>95 AND b.shopid=shopid;
END