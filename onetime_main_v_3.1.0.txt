BEGIN
	#Routine body goes here...
#声明变量  /日期，临时表
DECLARE thatDay date;
DECLARE thatDayEnd date;

select version(), @@sql_mode;
SET sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));

CALL classify_new();


set thatDayEnd=DATE_ADD(thisDay,INTERVAL 0 DAY);
SET thatDay=DATE_SUB(thisDay,INTERVAL totalWeeks*7 DAY);

DROP TABLE IF EXISTS tmp_onetime_tmp_1;
CREATE TABLE tmp_onetime_tmp_1 AS
SELECT 
x.shopid AS shopid,
x.shopname AS shopname,
x.goodsid AS goodsid,
x.goodsname AS goodsname,
SUM(x.salevalue) AS salevalue,
SUM(x.discvalue) AS discvalue,
SUM(x.salevalue)/SUM(x.salevalue+x.discvalue) AS disc,
x.zlprice AS zlprice,
x.normalprice AS normalprice,
SUM(x.qty) AS qty,
x.sdate AS sdate,
getZkb(x.zlprice,x.normalprice) AS zkb,
COUNT(x.zlprice) AS dayNumber,
COUNT(IF((x.zlprice<(getZkb(x.zlprice,x.normalprice)*x.normalprice)),1,0)) AS discDayNumber
FROM zn_dayly_sales x
WHERE x.sdate<=thatDayEnd AND x.sdate>thatDay
GROUP BY x.shopid,x.goodsid,x.zlprice;


DROP TABLE IF EXISTS tmp_onetime_tmp_2;
CREATE TABLE tmp_onetime_tmp_2 AS
SELECT 
y.shopid AS shopid,
y.shopname AS shopname,
y.goodsid AS goodsid,
y.goodsname AS goodsname,
SUM(y.salevalue) AS salevalue,#销售金额
SUM(y.discvalue) AS discvalue,
SUM(y.salevalue)/SUM(y.salevalue+y.discvalue) AS disc,
#x.zlprice AS zlprice,
y.normalprice AS normalprice,
SUM(y.qty) AS qty,#销售数量
y.zkb AS zkb,
SUM(y.dayNumber) AS dayNumber,#有销售天数
SUM(y.discDayNumber) AS discDayNumber
FROM tmp_onetime_tmp_1 y
GROUP BY y.shopid,y.goodsid,y.zkb;

# 销售数量求和
DROP TABLE IF EXISTS tmp_onetime_tmp_2_1;
CREATE TABLE tmp_onetime_tmp_2_1 AS
SELECT 
z.shopid,
z.goodsid,
SUM(z.dayNumber) AS dayNumberSum
FROM tmp_onetime_tmp_2 z
WHERE z.zkb<>0.9 
GROUP BY z.shopid,z.goodsid;

UPDATE tmp_onetime_tmp_2 a,tmp_onetime_tmp_2_1 b
SET a.dayNumber=(totalWeeks*7-b.dayNumberSum)
WHERE a.shopid=b.shopid AND a.goodsid=b.goodsid AND a.zkb=0.9;



INSERT INTO zn_price_dms (shopid,goodsid,normalprice,disc1,disc2,band1,band2,trueprice,dms)
SELECT 
a.shopid AS shopid,
a.goodsid AS goodsid,
a.normalprice AS normalprice,
FLOOR(a.salevalue/a.qty/a.normalprice*100) AS disc1,
CEILING(a.salevalue/a.qty/a.normalprice*100) AS disc2,
a.zkb*20 AS band1,
CASE WHEN (a.zkb*20<18) THEN a.zkb*20+1
												ELSE a.zkb*20+2 END AS band2,
(a.salevalue/a.qty) AS trueprice,
a.qty/a.dayNumber AS dms  #销售数量
FROM tmp_onetime_tmp_2 a
ON DUPLICATE KEY UPDATE
zn_price_dms.normalprice=VALUES(normalprice),
zn_price_dms.disc1=VALUES(disc1),
zn_price_dms.disc2=VALUES(disc2),
zn_price_dms.band1=VALUES(band1),
zn_price_dms.band2=VALUES(band2),
zn_price_dms.trueprice=VALUES(trueprice),
zn_price_dms.dms=VALUES(dms);



#update xlid
update zn_price_dms,v_goods 
SET zn_price_dms.xlid=v_goods.deptid
WHERE zn_price_dms.goodsid=v_goods.goodsid;

END